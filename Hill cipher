import numpy as np

def hill_cipher_encrypt(plain_text, key_matrix):
    plain_text = plain_text.replace(" ", "").upper()
    key_matrix = np.array(key_matrix)
    encrypted_text = ""
    for i in range(0, len(plain_text), len(key_matrix)):
        chunk = [ord(char) - ord('A') for char in plain_text[i:i+len(key_matrix)]]
        encrypted_chunk = np.dot(key_matrix, chunk) % 26
        encrypted_text += "".join([chr(char + ord('A')) for char in encrypted_chunk])
    return encrypted_text

def hill_cipher_decrypt(encrypted_text, key_matrix):
    key_matrix = np.array(key_matrix)
    inv_key_matrix = np.linalg.inv(key_matrix)
    decrypted_text = ""
    for i in range(0, len(encrypted_text), len(key_matrix)):
        chunk = [ord(char) - ord('A') for char in encrypted_text[i:i+len(key_matrix)]]
        decrypted_chunk = np.dot(inv_key_matrix, chunk) % 26
        decrypted_text += "".join([chr(char + ord('A')) for char in decrypted_chunk])
    return decrypted_text

def main():
    print("Welcome to the Hill Cipher Encryption/Decryption Tool!")
    while True:
        choice = input("Choose an option:\n1. Encrypt\n2. Decrypt\n3. Quit\nEnter your choice: ")
        if choice == "1":
            plain_text = input("Enter the plaintext message: ")
            key_matrix_str = input("Enter the key matrix values separated by space (e.g., '3 3 2 5' for a 2x2 matrix): ")
            key_matrix = list(map(int, key_matrix_str.split()))
            key_size = int(len(key_matrix) ** 0.5)
            key_matrix = [key_matrix[i:i+key_size] for i in range(0, len(key_matrix), key_size)]
            encrypted_text = hill_cipher_encrypt(plain_text, key_matrix)
            print("Encrypted message:", encrypted_text)
        elif choice == "2":
            encrypted_text = input("Enter the encrypted message: ")
            key_matrix_str = input("Enter the key matrix values separated by space (e.g., '3 3 2 5' for a 2x2 matrix): ")
            key_matrix = list(map(int, key_matrix_str.split()))
            key_size = int(len(key_matrix) ** 0.5)
            key_matrix = [key_matrix[i:i+key_size] for i in range(0, len(key_matrix), key_size)]
            decrypted_text = hill_cipher_decrypt(encrypted_text, key_matrix)
            print("Decrypted message:", decrypted_text)
        elif choice == "3":
            print("Thank you for using the Hill Cipher Encryption/Decryption Tool!")
            break
        else:
            print("Invalid choice. Please enter a valid option.")

if __name__ == "__main__":
    main()
